service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-central-1
  httpApi:
    cors: true
  environment:
    PRODUCTS_TABLE_NAME: !Ref productsTable
    STOCKS_TABLE_NAME: !Ref stocksTable
    REGION: ${self:provider.region}
    CREATE_PRODUCT_TOPIC_ARN:
      Ref: "createProductTopic"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:ListTables"
            - "dynamodb:Scan"
            - "dynamodb:BatchGetItem"
            - "dynamodb:PutItem"
            - "dynamodb:DeleteItem"
          Resource: "*"
        - Effect: Allow
          Action:
            - "sns:Publish"
          Resource:
            - Ref: "createProductTopic"

functions:
  getProductsList:
    handler: src/lambda/getProductsList.getProductsList
    events:
      - httpApi:
          path: /products
          method: get

  getProductsById:
    handler: src/lambda/getProductsById.getProductsById
    events:
      - httpApi:
          path: /products/{productId}
          method: get

  createProduct:
    handler: src/lambda/createProduct.createProduct
    events:
      - httpApi:
          path: /products
          method: post

  deleteProduct:
    handler: src/lambda/deleteProduct.deleteProduct
    events:
      - httpApi:
          path: /products/{productId}
          method: delete

  catalogBatchProcess:
    handler: src/lambda/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn
          batchSize: 5

resources:
  Resources:
    productsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    stocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocks
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "catalogItemsQueue"
        MessageRetentionPeriod: 60

    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "createProductTopic"

    emailSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: "email"
        Endpoint: "upmaten@gmail.com"
        TopicArn:
          Ref: "createProductTopic"

plugins:
  - serverless-plugin-typescript
